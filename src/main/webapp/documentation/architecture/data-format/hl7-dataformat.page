---
title: HL7 DataFormat
page_version: 16
page_creator: davsclaus
page_modifier: mrt1nz
--- pipeline:conf
h3. HL7 DataFormat
The [HL7] component ships with a HL7 data format that can be used to format between {{String}} and HL7 model objects. 
- {{marshal}} = from Message to byte stream (can be used when returning as response using the HL7 MLLP codec)
- {{unmarshal}} = from byte stream to Message (can be used when receiving streamed data from the HL7 MLLP 

To use the data format, simply instantiate an instance and invoke the marhsal or unmarshl operation in the route builder:
{code:java}
  DataFormat hl7 = new HL7DataFormat();
  ...
  from("direct:hl7in").marshal(hl7).to("jms:queue:hl7out");
{code}
In the sample above, the HL7 is marshalled from a HAPI Message object to a byte stream and put on a JMS queue.
The next example is the opposite:
{code:java}
  DataFormat hl7 = new HL7DataFormat();
  ...
  from("jms:queue:hl7out").unmarshal(hl7).to("patientLookupService");
{code}
Here we unmarshal the byte stream into a HAPI Message object that is passed to our patient lookup service.

Notice there is a shorthand syntax in Camel for well-known data formats that is commonly used.
Then you don't need to create an instance of the {{HL7DataFormat}} object:
{code:java}
  from("direct:hl7in").marshal().hl7().to("jms:queue:hl7out");
  from("jms:queue:hl7out").unmarshal().hl7().to("patientLookupService");
{code}
