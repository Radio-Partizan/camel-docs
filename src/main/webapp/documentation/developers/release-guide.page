---
title: Release Guide
page_version: 33
page_creator: jstrachan
page_modifier: jstrachan
--- pipeline:conf
h1. How to create and announce a Camel release.

*Note*: Make sure that you are using *JDK 6* as several camel components (like the [Web Console] for example) now require JDK 6

h2. Maven 2 Setup

Before you deploy anything to the maven repository using Maven 2, you should configure your \~/.m2/settings.xml file
so that the file permissions of the deployed artifacts are group writable.  If you do not do this, other developers will not able to overwrite your SNAPSHOT releases with newer versions.
{code:xml}
<settings>
  ...
  <servers>

    <server>
      <id>apache-repo</id>
      <username>chirino</username>
      <directoryPermissions>775</directoryPermissions>
      <filePermissions>664</filePermissions>
    </server>
    <server>
      <id>apache-snapshots</id>
      <username>chirino</username>
      <directoryPermissions>775</directoryPermissions>
      <filePermissions>664</filePermissions>
    </server>
    <server>
      <id>apache-website</id>
      <username>chirino</username>
      <directoryPermissions>775</directoryPermissions>
      <filePermissions>664</filePermissions>
    </server>

  </servers>
  ...
</settings>
{code}

h3. Creating the Camel Release

* Prepare env and directory structure
{code}
export PROJ=apache-camel
export PROJVER=<x.y.z>
mkdir  $HOME/$PROJ-$PROJVER
mkdir  $HOME/$PROJ-$PROJVER/maven2
mkdir  $HOME/$PROJ-$PROJVER/maven
mkdir  $HOME/$PROJ-$PROJVER/site
{code}

* Grab the latest source from SVN
{code}
svn co https://svn.apache.org/repos/asf/camel/trunk camel
cd camel
{code}

* Change the version number in:
 # pom.xml - in the project root *and* all sub-projects 
 # the value of <camel-version> property in the root pom.xml
 # Note: The command below will do the trick on Linux (replace for the appropriate version). 
{code}
find . -name pom.xml | grep -v .svn | xargs sed -i -e s/x.y-SNAPSHOT/$PROJVER/g
{code}
If you do this on MacOSX, you will need to:
{code}
find . -name pom.xml | grep -v .svn | xargs sed -i "" -e s/x.y-SNAPSHOT/$PROJVER/g
{code}

* Let Maven build, test, package, and deploy the binaries
{code}
mvn clean source:jar deploy -Drelease-repo-url=file:$HOME/$PROJ-$PROJVER/maven2 -Dm1-repo-url=file:$HOME/$PROJ-$PROJVER/maven -Prelease,enable-schemagen
{code}

* Tag the release using your local workspace to a new CAMEL_X_Y label
{code}
svn copy ../camel https://svn.apache.org/repos/asf/camel/tags/camel-x.y.z -m "Camel x.y.z Release"
{code}

* Check that the binaries look fine.

h2. Testing the Camel Release Candidate

When folks need to test out a release candidate, the jars will not have been uploaded to the Maven repo. This means that the example programs which use Maven will not automatically work.

So whenever running the [Examples] you need to append the following command line argument...
{code}
mvn camel:run -DremoteRepo=http://people.apache.org/~chirino/apache-camel-1.2.0-RC1/maven2
{code}
Assuming that the release candidate is deployed to *[http://people.apache.org/~chirino/apache-camel-1.2.0-RC1/maven2]

h2. Announcing the Camel Release

# Perform a [release in JIRA|https://issues.apache.org/activemq/secure/project/ManageVersions.jspa?pid=11020] and create a new release version in JIRA
# Create a download page for the release in the WIKI similar like the [Camel 2.0.0 Release]. There could be already a release notes page in the [In Progress] folder - if so just edit it and change its parent to be the [Download] page. Otherwise add a new child page in [Download] and update the [Download] page to show the latest release version.
# Update the [Download] page to refer to the latest release distributions (search & replace the version numbers mostly :)
# Update the [Xml Reference] page with a link to the HTML and XSD
# Update the [Manual] page with a link to the PDF
# Mail the [dev|mailto:camel-user@activemq.apache.org] & [user|mailto:camel-user@activemq.apache.org] lists
# [Post|http://cwiki.apache.org/confluence/pages/createblogpost.action?spaceKey=CAMEL] a news entry on the WIKI which *links to the release page* so folks can download it!
# perform a full [auto-export plugin export of the wiki|http://cwiki.apache.org/confluence/admin/plugins.action?pluginKey=confluence.extra.autoexport] to static html to work around the bug with autoexport plugin not updating the [index page when you post the news item|http://cwiki.apache.org/CAMEL/index.html]
 * to run autoexport: you go to admin -> plugins -> auto-export-plugin -> configure plugin. Select ActiveMQ from the list, then click on Export Space(s). Be very careful so you don't mess up anyone else's wikis!
# Have a beer\! :-)

