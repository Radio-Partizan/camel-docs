h2. Running RAT

There is a tool called [ARAT|http://code.google.com/p/arat/] along with a [maven RAT plugin|http://mojo.codehaus.org/rat-maven-plugin/] which is very useful for checking the contents of releases and ensuring we don't miss licenses, headers, notice files and so forth. Note this tool is intended purely as a safety net; we also want the committers to manually review releases and check they look fine.

To run the RAT report try

{code}
mvn clean
mvn rat:check -P rat
{code}

There should then be a file called *target/camel-parent-$VERSION.rat* which contains the output of the RAT report.

h3. If RAT barfs

Its typically that some local file has caused RAT to break. It could be some temporary file generated by the build; maybe a unit test case generated file or some artifact from creating the site or something.

Try running

{code}
svn stat
{code}

To find the culprits then try re-running RAT. Hopefully future versions will make it a bit easier to diagnose why it barfs. Incidentally the root pom has an excludes element so you can always add some excludes in there to try hide temporary/generated files etc