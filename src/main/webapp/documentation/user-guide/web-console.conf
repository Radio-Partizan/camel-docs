h1. Web Console

The Camel Web Console is available from versions 2.0 onwards and provides a full access over a RESTful API to camel endpoints, messages and routes.
{info:title=Camel 2.5 or better}
The [Web Console] from Camel 2.5 onwards requires JDK 1.6 as minimum to run.
{info}

h2. Download and Run the Console

[Download] a Camel release.

Then from the command line type

{code}
java -jar camel-web-standalone-2.4.0.jar 
{code}

You should now be able to point your browser at: http://localhost:8080/

h2. Build and Run the Console 

First get the latest [Source] then from the command line type

{code}
cd components/camel-web
mvn jetty:run
{code}

Then point your web browse at http://localhost:8080/

You should be able to do things like

* browse the available endpoints
* browse the messages on an endpoint if it is a [BrowsableEndpoint]
* send a message to an endpoint
* create new endpoints

h2. Embedding web console in your own web application.

See this discussion about this and James great post with answers: http://www.nabble.com/Embedded-web-console-td24366288.html


h2. REST API

Camel comes with a full RESTful API for interacting with the Camel context, the available endpoints and routes. You can browse details of the running API via http://localhost:8080/api

The web application uses mostly the same URIs for the HTML representation of a resource (e.g. */endpoints*) as the JSON and XML representations. To help rendering the different representations in your browser you can append *.xml*, *.html*, *.json* or even *.dot* to URLs. 

For example viewing these URLs are equivalent

|| URL || Same as ||
| http://localhost:8080/endpoints.xml | http://localhost:8080/endpoints with Accept header of text/xml or application/xml|
| http://localhost:8080/endpoints.json | http://localhost:8080/endpoints with Accept header of application/json|
| http://localhost:8080/routes.dot | http://localhost:8080/routes with Accept header of text/vnd.graphviz |


For more details try viewing the [API documentation in your local Camel instance|http://localhost:8080/api]

h2. Route Viewing and Editing through Web Console
Web Console provide route viewing and editing functionality. You can view your route via http://localhost:8080/routes/yourRouteId and it default present the route in XML.Camel uses JAXB to process the XML route definitions.
For groovy routes handling, it provide a [Groovy Renderer|Groovy Renderer User Guide]. However, [Groovy Renderer|Groovy Renderer User Guide] can't support all the DSL features, so you should read the [Unsupported Groovy DSL Features on Web Console], which lists and explains the unsupported features, including the reason for giving up them, alternative solutions or some suggestion for those who indeed need to extend them.
