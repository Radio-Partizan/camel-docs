h2. VM Component

The *vm:* component provides asynchronous [SEDA|http://www.eecs.harvard.edu/~mdw/proj/seda/] behavior so that messages are exchanged on a [BlockingQueue|http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/BlockingQueue.html] and consumers are invoked in a separate thread pool to the producer.

This component differs from the [Seda] component in that VM supports communication across CamelContext instances, so you can use this mechanism to communicate across web applications, provided that the {{camel-core.jar}} is on the {{system/boot}} classpath.

This component is an extension to the [Seda] component.

h3. URI format

{code}
vm:someName[?options]
{code}

Where *someName* can be any string to uniquely identify the endpoint within the JVM (or at least within the classloader which loaded the camel-core.jar)

You can append query options to the URI in the following format, {{?option=value&option=value&...}}

h3. Options

See the [Seda] component for options and other important usage as the same rules applies for this [Vm] component.

h3. Samples
In the route below we send the exchange to the VM queue that is working across CamelContext instances:

{code:java}
from("direct:in").bean(MyOrderBean.class).to("vm:order.email");
{code}

And then in another Camel context such as deployed as in another {{.war}} application:
{code:java}
from("vm:order.email").bean(MyOrderEmailSender.class);
{code}

{include:Endpoint See Also}
- [Seda]