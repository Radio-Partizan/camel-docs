h2. Request Reply

Camel supports the [Request Reply|http://www.enterpriseintegrationpatterns.com/RequestReply.html] from the [EIP patterns|Enterprise Integration Patterns] by supporting the [Exchange Pattern] on a [Message] which can be set to *InOut* to indicate a request/reply. Camel [Components] then implement this pattern using the underlying transport or protocols.

!http://www.enterpriseintegrationpatterns.com/img/RequestReply.gif!

For example when using [JMS] with InOut the component will by default perform these actions

* create by default a temporary inbound queue
* set the JMSReplyTo destination on the request message
* set the JMSCorrelationID on the request message
* send the request message
* consume the response and associate the inbound message to the request using the JMSCorrelationID (as you may be performing many concurrent request/responses).

h3. Explicitly specifying InOut

When consuming messages from [JMS] a Request-Reply is indicated by the presence of the *JMSReplyTo* header.

You can explicitly force an endpoint to be in Request Reply mode by setting the exchange pattern on the URI. e.g.

{code}
jms:MyQueue?exchangePattern=InOut
{code}

*NOTE*
From Camel 1.5.1 you can specify the exchange pattern in DSL rule or Spring configuration.

{snippet:id=example|lang=java|url=camel/trunk/camel-core/src/test/java/org/apache/camel/processor/SetExchangePatternTest.java}

{snippet:id=example|lang=xml|url=camel/trunk/components/camel-spring/src/test/resources/org/apache/camel/spring/processor/setExchangePattern.xml}

{include:Using This Pattern}