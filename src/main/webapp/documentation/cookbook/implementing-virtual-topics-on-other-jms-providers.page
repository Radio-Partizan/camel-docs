---
title: Implementing Virtual Topics on other JMS providers
page_version: 6
page_creator: jstrachan
page_modifier: jstrachan
--- pipeline:conf
h2. Implementing Virtual Topics on other JMS providers

[ActiveMQ|http://activemq.apache.org/] supports [Virtual Topics|http://activemq.apache.org/virtual-destinations.html] since durable topic subscriptions kinda suck (see [this page for more detail|http://activemq.apache.org/virtual-destinations.html]) mostly since they don't support [Competing Consumers].

Most folks want Queue semantics when consuming messages; so that you can support [Competing Consumers] for load balancing along with things like [Message Groups|http://activemq.apache.org/message-groups.html] and [Exclusive Consumers|http://activemq.apache.org/exclusive-consumer.html] to preserve ordering or partition the queue across consumers.

However if you are using another JMS provider you can implement Virtual Topics by switching to ActiveMQ :) or you can use the following Camel pattern.

First here's the ActiveMQ approach.

* send to *activemq:topic:VirtualTopic.Orders*
* for consumer A consume from *activemq:Consumer.A.VirtualTopic.Orders*

When using another message broker use the following pattern

* send to *jms:Orders*
* add this route with a to() for each logical durable topic subscriber {code}from("jms:Orders").to("jms:Consumer.A", "jms:Consumer.B", ...); {code}
* for consumer A consume from *jms:Consumer.A*

